function [fitresult, gof] = plot_intensity_gradient(x_coord_vesicles, all_blueintAND, all_redintAND)
%CREATEFITS(X_COORD_VESICLES,ALL_BLUEINTAND,ALL_REDINTAND)
%  Create fits.
%
%  Data for 'linear' fit:
%      X Input : x_coord_vesicles
%      Y Output: all_blueintAND
%  Data for 'untitled fit 2' fit:
%      X Input : x_coord_vesicles
%      Y Output: all_redintAND
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 06-Mar-2018 15:57:23

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'linear'.
[xData, yData] = prepareCurveData( x_coord_vesicles/4.8177, all_blueintAND );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'linear' );
h = plot( fitresult{1}, xData, yData);
grid on

%% Fit: 'untitled fit 2'.
[xData, yData] = prepareCurveData( x_coord_vesicles/4.8177, all_redintAND );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft );

% Plot fit with data.
hold on
h = plot( fitresult{2}, xData, yData);
legend('blue dye (GUV lumen before FT)', 'linear fit','red dye (external before FT)', 'linear fit', 'Location', 'NorthEast' );
% Label axes
xlabel('position [\mum]')
ylabel('intensity [a. U.]')
grid on


